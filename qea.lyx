#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 2cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
title{Algoritmos Evolutivos inspirados en 
\backslash

\backslash
 Computación Cuántica}
\end_layout

\begin_layout Plain Layout


\backslash
maketitle
\end_layout

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout


\backslash
large Rodrigo Arias Mallo
\backslash

\backslash
 Carlos Pérez Ramil
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Abstract
Este estudio tiene como objetivo presentar una serie de técnicas que tratan
 de combinar la forma de resolver problemas de los Algoritmos Evolutivos
 con los conceptos básicos de la Computación Cuántica, así como su repercusión
 y posibles aplicaciones en el mundo de la Robótica.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
Los Algoritmos Evolutivos son un método de resolución de problemas ampliamente
 desarrollado desde la década de 1980 hasta la actualidad.
 Utilizan los principios de la evolución biológica para operar sobre un
 conjunto de individuos que representa distintas soluciones a un problema
 determinado.
 Entre sus múltiples variantes encontramos una relativamente reciente, que
 toma algunos conceptos del campo emergente de la Computación Cuántica para
 modelar el individuo y la manera en que este evoluciona.
 Hay que tener presente que no se trata de un algoritmo cuántico, sino de
 un algoritmo clásico, pensado para ser ejecutado en un computador digital,
 pero que utiliza conceptos de Computación Cuántica como son el 
\emph on
qbit
\emph default
 o la superposición de estados.
 Por eso se les denomina 
\begin_inset Quotes fld
\end_inset

Algoritmos Evolutivos inspirados en Computación Cuántica
\begin_inset Quotes frd
\end_inset

 (QEA, por sus siglas en inglés).
\end_layout

\begin_layout Subsection
Computación Evolutiva
\end_layout

\begin_layout Standard
La Computación Evolutiva es una rama de la Inteligencia Artificial que trata
 principalmente problemas de optimización.
 Surge con la idea de aplicar los principios de la evolución biológica a
 la resolución de problemas complejos.
 En particular, se basa en los conceptos de 
\emph on
selección natural, recombinación genética 
\emph default
y 
\emph on
mutación.
 
\emph default
Las primeras aproximaciones datan de los años 50, pero no se consagra como
 disciplina hasta la década de los 70.
 Desde entonces se ha realizado mucha investigación en este campo, y encontramos
 innumerables aplicaciones en todo tipo de contextos, no sólo de carácter
 científico-técnico, sino también artístico, económico o social.
\end_layout

\begin_layout Standard
Existen tres grandes subcampos de la Computación Evolutiva, entre muchos
 otros de distinta relevancia:
\end_layout

\begin_layout Itemize

\emph on
Algoritmos Genéticos
\emph default
.
 Modelan las posibles soluciones de un problema como individuos de una población
, y las distintas variables como su información genética.
 Funcionan de forma iterativa, simulando las distintas generaciones de la
 población, y aplicando los operadores genéticos de selección, cruce y mutación
 de manera estocástica.
\end_layout

\begin_layout Itemize

\emph on
Programación Genética
\emph default
.
 Similar a los Algoritmos Genéticos, pero en este caso las soluciones son
 programas, y su calidad se determina en función de su capacidad para resolver
 un problema computacional.
\end_layout

\begin_layout Itemize

\emph on
Estrategias Evolutivas
\emph default
.
 Utilizan variables adicionales para controlar el proceso de evolución de
 forma dinámica.
\end_layout

\begin_layout Standard
Los algoritmos evolutivos son adecuados para problemas en los que el espacio
 de búsqueda es muy grande y no hay una solución analítica conocida.
 Esto los hace especialmente adecuados para ciertos problemas de Robótica,
 como son el diseño de morfologías o de controladores.
 Sin embargo, presentan ciertos inconvenientes.
 En primer lugar, no garantizan que se encuentre el óptimo global.
 Y en caso de alcanzar a una solución aceptable, resulta muy difícil (o
 casi imposible, en algunos casos) averiguar cómo y por qué se ha llegado
 hasta esa solución.
\end_layout

\begin_layout Subsection
Computación Cuántica
\end_layout

\begin_layout Standard
La computación cuántica es un nuevo paradigma de computación.
 Emplea las propiedades especiales de la materia que suceden en una escala
 más pequeña.
\end_layout

\begin_layout Standard
El objetivo que busca la computación cuántica es el de hacer uso de las
 propiedades inherentes a la naturaleza para realizar computaciones.
 De la misma forma que los ordenadores clásicos que acostumbramos a emplear,
 existe una analogía cuántica; el ordenador cuántico.
 Los bits se convierten en qbits.
 
\end_layout

\begin_layout Standard
Sin embargo, los qbits tienen la propiedad de encontrarse en varios estados
 al mismo tiempo.
 Esta propiedad se denomina 
\emph on
superposición
\emph default
.
 Así, la representación del estado de un qbit 
\begin_inset Formula $\left|\psi\right\rangle $
\end_inset

 es:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left|\psi\right\rangle =\left(\begin{array}{c}
\alpha\\
\beta
\end{array}\right)=\alpha\left(\begin{array}{c}
1\\
0
\end{array}\right)+\beta\left(\begin{array}{c}
0\\
1
\end{array}\right)=\alpha\left|0\right\rangle +\beta\left|1\right\rangle 
\]

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Formula $\alpha,\beta\in\mathbb{C}$
\end_inset

 y también 
\begin_inset Formula $\left|\alpha\right|^{2}+\left|\beta\right|^{2}=1$
\end_inset

.
 La medición de un qbit resultará en 0 o bien en 1.
 De forma que la probabilidad de que resulte 0 es 
\begin_inset Formula $|\alpha|^{2}$
\end_inset

 y de que resulte 1 es 
\begin_inset Formula $|\beta|^{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Una ventaja frente a la computación clásica es el entrelazamiento de estados.
 Para un sistema 
\begin_inset Formula $\left|\psi\right\rangle $
\end_inset

 de n qbits:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left|\psi\right\rangle =\gamma_{1}\left|00\ldots0\right\rangle +\gamma_{2}\left|00\ldots1\right\rangle +\ldots+\gamma_{2^{n}}\left|11\ldots1\right\rangle 
\]

\end_inset


\end_layout

\begin_layout Standard
Sólo debe cumplir la restricción: 
\begin_inset Formula 
\[
\sum_{_{i=1}}^{2^{n}}\left|\gamma_{i}\right|^{2}=1
\]

\end_inset


\end_layout

\begin_layout Standard
De forma que se pueden construir estados especiales, que no son posibles
 en los bits clásicos, por ejemplo el estado de Bell, denominado 
\begin_inset Formula $\left|B_{00}\right\rangle $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left|B_{00}\right\rangle =\frac{1}{\sqrt{2}}\left(\left|00\right\rangle +\left|11\right\rangle \right)
\]

\end_inset


\end_layout

\begin_layout Standard
La probabilidad de que se obtenga como resultado de una medición 01 o 10,
 es nula.
 Sin embargo, la probabilidad de obtener 00 o bien 11 es 
\begin_inset Formula $\frac{1}{2}$
\end_inset

.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estado del arte
\end_layout

\begin_layout Standard
Para entender el tipo de algoritmos que se va a analizar aquí, hay que entender
 primero la diferencia entre QEA y otros conceptos que pueden parecer similares,
 pero no lo son en absoluto.
 Las palabras 
\emph on
quantum, evolutionary 
\emph default
y 
\emph on
genetic, 
\emph default
aparecen juntas en decenas de publicaciones que nada tienen que ver unas
 con otras.
 
\end_layout

\begin_layout Standard
Existen tres líneas de investigación que relacionan los conceptos de la
 Computación Cuántica con la Computación Evolutiva: una muy popular es la
 generación automática de circuitos cuánticos mediante algoritmos genéticos
 tradicionales; otra, que es la que se denomina como 
\emph on
Quantum-Inspired Evolutionary Algorithms
\emph default
, consiste en el diseño de algoritmos evolutivos (para computadores digitales)
 que toman algunos conceptos de la Computación Cuántica para modelar la
 población; y una última, quizás la menos desarrollada de todas por su elevadísi
ma complejidad, que estudia algoritmos evolutivos cuánticos en sentido literal,
 es decir, para ser ejecutados en una máquina cuántica.
 La que se va a estudiar aquí es la segunda, pero es interesante conocer
 y distinguir las demás.
\end_layout

\begin_layout Standard
A.
 Narayanan y M.
 Moore 
\begin_inset CommandInset citation
LatexCommand cite
key "Narayanan1996"

\end_inset

 fueron los primeros en proponer la idea de los QEA en 1996.
 Sin embargo, se utilizará el trabajo de Kuk-Hyun Han y Jong-Hwan Kim 
\begin_inset CommandInset citation
LatexCommand cite
key "Han2003,Han2002_2,Han2002"

\end_inset

 como guía para exponer el algoritmo, por el mayor nivel de detalle que
 hay en su trabajo.
 En su tesis, publicada en 2003, Han propone una estructura genérica para
 los QEA, y después implementa varias versiones adaptadas a distintos problemas.
\end_layout

\begin_layout Standard
Desde su primera aparición en 1996, los QEA han sido objeto de estudio de
 un número considerable de publicaciones, pero no se puede decir que sea
 una línea de investigación especialmente popular.
 Después de más de una década, su desarrollo no parece avanzar demasiado,
 y las novedades consisten solamente en pequeñas mejoras del algoritmo original.
 En cualquier caso, se ha llevado a la práctica en numerosos problemas reales
 con aparente éxito, normalmente mejorando los resultados obtenidos por
 técnicas evolutivas tradicionales.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
El concepto de QEA
\end_layout

\begin_layout Standard
A continuación se detalla la propuesta de Han y Kim para el esquema general
 de un QEA.
\end_layout

\begin_layout Subsection
Representación
\end_layout

\begin_layout Standard
Un individuo posee un solo cromosoma que se modela como un vector de qbits:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left[\begin{pmatrix}\alpha_{1}\\
\beta_{1}
\end{pmatrix},\begin{pmatrix}\alpha_{2}\\
\beta_{2}
\end{pmatrix},...,\begin{pmatrix}\alpha_{m}\\
\beta_{m}
\end{pmatrix}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $\left|\alpha_{i}\right|^{2}+\left|\beta_{i}\right|^{2}=1$
\end_inset

 para 
\begin_inset Formula $i=1,2,...,m$
\end_inset

.
 Se utilizan los valores de probabilidad de cada qbit para simular el concepto
 de superposición de estados, de forma que un individuo contiene información
 acerca de todas las soluciones simultáneamente.
 Lo que se pretende con esta representación es aumentar la variabilidad
 genética en la población, ya que la información transmitida a lo largo
 de las generaciones son valores de probabilidad de todas las secuencias
 posibles, y no secuencias concretas.
\end_layout

\begin_layout Subsection
Algoritmo
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

procedure QEA
\end_layout

\begin_layout Plain Layout

begin
\end_layout

\begin_layout Plain Layout

	t = 0
\end_layout

\begin_layout Plain Layout

1)  initialize Q(t)
\end_layout

\begin_layout Plain Layout

2)  make P(t) by observing the states of Q(t)
\end_layout

\begin_layout Plain Layout

3)  evaluate P(t)
\end_layout

\begin_layout Plain Layout

4)  store the best solutions among P(t) into B(t)
\end_layout

\begin_layout Plain Layout

	while (not termination-condition) do
\end_layout

\begin_layout Plain Layout

	begin
\end_layout

\begin_layout Plain Layout

		t = t + 1
\end_layout

\begin_layout Plain Layout

5)  	make P(t) by observing the states of Q(t-1)
\end_layout

\begin_layout Plain Layout

6)  	evaluate P(t)
\end_layout

\begin_layout Plain Layout

7)  	update Q(t) using Q-gates
\end_layout

\begin_layout Plain Layout

8)  	store the best solutions among B(t-1) and P(t) into B(t)
\end_layout

\begin_layout Plain Layout

9)  	store the best solution b among B(t)
\end_layout

\begin_layout Plain Layout

	end
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Esquema del algoritmo QEA
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $Q(t)=\left\{ q_{1}^{t},q_{2}^{t},...,q_{n}^{t}\right\} $
\end_inset

 es la población en el instante 
\begin_inset Formula $t$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $P(t)=\left\{ x_{1}^{t},x_{2}^{t},...,x_{n}^{t}\right\} $
\end_inset

 es un conjunto de soluciones en el instante 
\begin_inset Formula $t$
\end_inset

, resultante de efectuar una medición en cada individuo de 
\begin_inset Formula $Q(t)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $B(t)=\left\{ b_{1}^{t},b_{2}^{t},...,b_{n}^{t}\right\} $
\end_inset

 es el conjunto de mejores soluciones obtenidas hasta el instante 
\begin_inset Formula $t$
\end_inset

.
 
\begin_inset Formula $\mathbf{b}$
\end_inset

 es la mejor solución global.
\end_layout

\begin_layout Standard
El algoritmo no es un algoritmo cuántico, si no que se ejecuta en un ordenador
 clásico, por lo que es posible determinar el estado de un qbit, sin que
 este se colapse.
 De esta forma, de un vector de qbits 
\begin_inset Formula $\mathbf{q}\in Q(t)$
\end_inset

 es posible realizar una medición en el vector binario 
\begin_inset Formula $\mathbf{x}\in P(t)$
\end_inset

, sin modificar 
\begin_inset Formula $\mathbf{q}$
\end_inset

.
\end_layout

\begin_layout Standard
1.
 Los qbits de los cromosomas se inicializan con valores de igual probabilidad
 para todos los estados.
\end_layout

\begin_layout Standard
2.
 Para cada individuo 
\begin_inset Formula $j=1,2,...,n$
\end_inset

, se realiza una medición de los qbits del cromosoma 
\begin_inset Formula $\mathbf{q_{j}}$
\end_inset

.
 En el vector 
\begin_inset Formula $\mathbf{x_{j}}$
\end_inset

 se almacena el estado del cromosoma colapsado, que formará la solución.
 
\end_layout

\begin_layout Standard
3.
 Evalúa el resultado de cada individuo 
\begin_inset Formula $\mathbf{x_{j}}$
\end_inset

 empleando una función de 
\emph on
fitness
\emph default
.
\end_layout

\begin_layout Standard
4.
 Selecciona las mejores soluciones tras evaluar cada 
\begin_inset Formula $\mathbf{x_{j}}$
\end_inset

, y se almacenan en 
\begin_inset Formula $B(t)$
\end_inset

.
 Obviamente, 
\begin_inset Formula $B(t)=P(t)$
\end_inset

 cuando 
\begin_inset Formula $t=0$
\end_inset

.
 
\end_layout

\begin_layout Standard
A continuación comienza un bucle que se repetirá hasta que lo indique la
 condición de parada.
\end_layout

\begin_layout Standard
5.
 Repite el procedimiento del paso 2, que consiste en medir el estado de
 los cromosomas de 
\begin_inset Formula $Q(t-1)$
\end_inset

 en 
\begin_inset Formula $P(t)$
\end_inset

.
 Sin alterar el estado del cromosoma.
\end_layout

\begin_layout Standard
6.
 Evalúa 
\begin_inset Formula $\mathbf{x_{j}}$
\end_inset

 para cada 
\begin_inset Formula $j=1,2,...,n$
\end_inset

.
\end_layout

\begin_layout Standard
7.
 Realiza una modificación en el valor de los qbits de cada individuo.
 Consiste en una trasformación aplicando una puerta cuántica de rotación.
 Se acerca el valor de cada qbit a 
\begin_inset Formula $\left|0\right\rangle $
\end_inset

 o a 
\begin_inset Formula $\left|1\right\rangle $
\end_inset

, aumentando o reduciendo el valor de 
\begin_inset Formula $\alpha$
\end_inset

 y de 
\begin_inset Formula $\beta$
\end_inset

 en función de la variación del 
\emph on
fitness 
\emph default
con respecto al mejor actual.
 De esta forma, cada vez existen más probabilidades de que el valor resultante
 de medir proporcione un resultado más acercado al indicado por la función
 de 
\emph on
fitness
\emph default
.
\end_layout

\begin_layout Standard
8.
 Almacena las mejores soluciones de entre 
\begin_inset Formula $B(t-1)$
\end_inset

 y 
\begin_inset Formula $P(t)$
\end_inset

 en 
\begin_inset Formula $B(t)$
\end_inset

.
 Vuelve al paso 5.
\end_layout

\begin_layout Standard
Al finalizar, el vector 
\begin_inset Formula $\mathbf{b}$
\end_inset

 contendrá la mejor solución alcanzada, en forma de vector binario.
\end_layout

\begin_layout Standard
Estableciendo una correspondencia con los términos biológicos, la población
 en forma de qbits 
\begin_inset Formula $Q(t)$
\end_inset

 equivaldría al 
\emph on
genotipo, 
\emph default
y la forma binaria 
\begin_inset Formula $P(t)$
\end_inset

 al 
\emph on
fenotipo.

\emph default
 
\end_layout

\begin_layout Standard
El algoritmo propuesto por Han 
\begin_inset CommandInset citation
LatexCommand cite
key "Han2003,Han2002_2,Han2002"

\end_inset

 no emplea las operaciones habituales de cruce ni de mutación para producir
 la siguiente generación de individuos.
 Sin embargo, otras publicaciones sí hacen uso de ellos (citar autores).
 
\end_layout

\begin_layout Subsection
Rendimiento
\end_layout

\begin_layout Standard
Se han realizado experimentos con distintos problemas de optimización combinator
ia y numérica.
 Han y Kim 
\begin_inset CommandInset citation
LatexCommand cite
key "Han2002"

\end_inset

 hacen una comparativa entre algoritmos genéticos tradicionales y QEA para
 el problema de la mochila.
 En este caso, el algoritmo utiliza a mayores un operador de 
\emph on
migración, 
\emph default
que se define como el proceso de copiar un 
\begin_inset Formula $\mathbf{b_{j}^{t}}$
\end_inset

 en otros elementos de 
\begin_inset Formula $B(t)$
\end_inset

 con un valor de 
\emph on
fitness 
\emph default
inferior.
 Nótese que el operador de migración se aplica sobre el conjunto de mejores
 soluciones, y no sobre el conjunto de individuos.
 De todas formas, una migración en la generación 
\begin_inset Formula $t$
\end_inset

 provoca variaciones en los individuos de la generación 
\begin_inset Formula $t+1$
\end_inset

 por medio de la actualización de los qbits en el paso 7.
 Los resultados que obtienen son en general favorables a los QEA, ya que
 estos no convergen de forma tan prematura como los tradicionales, alcanzando
 valores de beneficio superiores.
 Narayanan y Moore 
\begin_inset CommandInset citation
LatexCommand cite
key "Narayanan1996"

\end_inset

 aplican QEA al problema del viajante con resultados similares.
\end_layout

\begin_layout Standard
Mohammed 
\emph on
et al.
 
\emph default
experimentan con combinaciones de distintos tipos de cruce (
\emph on
single-point, two-point, multi-point 
\emph default
y 
\emph on
quantum interference crossover
\emph default
) y de mutación (
\emph on
quantum inversion 
\emph default
y 
\emph on
quantum swap mutation
\emph default
) para tratar de determinar las que producen mejores resultados en problemas
 de búsqueda de mínimos/máximos de funciones.
 En general, concluyen que la utilización de operadores genéticos es beneficiosa
 para el algoritmo.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Aplicaciones en la robótica
\end_layout

\begin_layout Standard
Existen varios ejemplos de QEA aplicados al campo de la robótica.
 En general se centran en problemas con un amplio espacio de búsqueda, donde
 los algoritmos evolutivos son apropiados.
 Dado que es un campo de reciente desarrollo, las posibles aplicaciones
 aún no han sido exploradas en profundidad.
\end_layout

\begin_layout Subsection
Motricidad
\end_layout

\begin_layout Standard
Gwo-Ruey Yu y Lun-Wei Huang propusieron un controlador para un brazo robótico
 de dos articulaciones, empleando lógica difusa y basado en un problema
 de optimización LMI (linear matrix inequality).
\end_layout

\begin_layout Standard
Los resultados son comparados con el mismo controlador, con algoritmos genéticos.
 El resultado para QEA es mejor que para GA, sin embargo no incluye una
 comparación cuantitativa.
\end_layout

\begin_layout Standard
In-Won Park, Ki-Baek Lee y Jong-Hwan Kim emplean el algoritmo MQEA, que
 mejora QEA añadiendo varios objetivos para minimizar.
 Lo han aplicado al control de la postura de un robot humanoide, cuando
 recibe una fuerza externa, de forma que pueda mantenerse de pie.
 Utilizan el método ILQR (iterative linear quadratic regulator) en el que
 los pesos de la matriz se obtienen de forma evolutiva.
\end_layout

\begin_layout Standard
Obtuvieron las trayectorias óptimas que mejor satisfacen los criterios de
 calidad (ángulo, torque y tiempo).
 
\end_layout

\begin_layout Subsection
Planificación de rutas
\end_layout

\begin_layout Standard
En 2009, Ye-Hoon Kim y Jong-Hwan Kim usan el método MQEA para diseñar de
 forma eficiente, un sistema de diseño de rutas, basado en lógica difusa.
 Emplean el tiempo, la dirección global y local como criterios de medida
 de calidad.
 Tratan de golpear una pelota en un juego de fútbol para robots.
\end_layout

\begin_layout Standard
Al comparar los resultados con el algoritmo NSGA-II (nondominated sorting
 genetic algorithm-II), obtienen unos resultados más cercanos al frente
 óptimo de Pareto.
\end_layout

\begin_layout Standard
Un año más tarde, Yangguang Sun y Mingyue Ding analizan el problema de trazar
 rutas para evitar obstáculos (path planning).
 Codifican la ruta en los propios qbits y añaden operadores de mutación.
 Los resultados son de mayor diversidad poblacional, mejores capacidades
 de búsqueda y una mejor convergencia.
\end_layout

\begin_layout Standard
En Julio de 2013, SHEN Xiaoning mejoró las soluciones al problema de trazado
 de rutas, para entornos dinámicos.
 A través de un mapa de casillas, trata de buscar una ruta, en el que los
 obstáculos cambian de posición y morfología.
 Además añade operaciones de mutación y cruce, para evitar la convergencia
 prematura.
\end_layout

\begin_layout Standard
Los resultados muestran otra vez que QEA supera a los algoritmos genéticos
 clásicos.
 Además muestra también los resultados de QEA sin mutación ni cruce, y se
 aprecia que en el caso en el que aparece un nuevo obstáculo, no consiguen
 encontrar el camino óptimo.
 Por el contrario, con dichos operadores, la ruta óptima se encuntra el
 100% de los casos.
\end_layout

\begin_layout Subsection
Otras aplicaciones
\end_layout

\begin_layout Standard
Si-Jung Ryu, Rituparna Datta y Jong-Hwan Kim proponen emplear otra variante
 de QEA denominada DMQEA (dual multiobjective quantum-inspired evolutionary
 algorithm) para la colocación óptima de sensores de proximidad en un entorno
 2D.
 En los experimentos tratan de minimizar el número de sensores, la cobertura
 y el ratio de interferencia.
 Sin embargo no proporcionan una comparación con otros algoritmos.
 Mencionan que el algoritmo DMQEA es capaz de indicar las posiciones óptimas
 de la colocación de cada sensor, para minimizar los objetivos, en las proporcio
nes que se le indiquen.
\end_layout

\begin_layout Standard
Deok-Hwa Kim et.
 al han propuesto una solución para la detección automática de robots, en
 el programa MiroSOT, enfocado a campeonatos de fútbol para robots.
 Dado que el ajuste de los colores es un proceso difícil por motivo de las
 sombras y cambios de luz, usan QEA para determinar de forma automática
 los parámetros.
 Han conseguido resolver el problema, pero la simulación en demasiado lenta
 como para realizarla en tiempo real, durante la competición.
 Para solventarlo proponen emplear procesamiento por GPU, o realizar en
 preprocesado bayesiano de la imagen, que agilice el análisis posterior.
\end_layout

\begin_layout Standard
Zhiyong Li et.
 al aplican QEA a entornos multi-robot, para trabajar de forma cooperativa
 en una formación de coalición.
 Los robots deben trabajar en equipo para solucionar una tarea.
 Enfocan la solución de forma genérica, donde existe una función objetivo
 a minimizar.
 En comparación con los algoritmos genéticos clásicos, la calidad de esta
 solución no sólo es mejor, si no que se encuentra de forma más rápida.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Standard
Los Algoritmos Evolutivos inspirados en Computación Cuántica son una nueva
 vertiente de la Computación Evolutiva que constituye una alternativa viable
 a las técnicas tradicionales.
 No se pone en duda su eficacia ni su eficiencia a la hora de resolver problemas.
 Lo que sí es cuestionable es su grado de 
\begin_inset Quotes fld
\end_inset

inspiración
\begin_inset Quotes frd
\end_inset

 en los conceptos de la cuántica.
 
\end_layout

\begin_layout Standard
El QEA utiliza números reales para representar los qbits, desechando por
 completo la parte compleja.
 Esto implica que la puerta cuántica aplicada en el paso 7 del algoritmo
 sólo realiza rotaciones con 1 grado de libertad, cuando las operaciones
 cuánticas sobre qbits en estados puros permiten hasta 2 grados de libertad.
 Tampoco se aprovecha una de las propiedades más interesantes de la información
 cuántica, que es el entrelazamiento de qbits que se expone en la sección
 1.2.
 En QEA, los qbits siempre se tratan individualmente, sujetos a la restricción
 ya mencionada que establece
\begin_inset Formula $\left|\alpha_{i}\right|^{2}+\left|\beta_{i}\right|^{2}=1$
\end_inset

.
 Por todo esto, la clase de algoritmos aquí expuesta se parece más a un
 método probabilista clásico que a uno cuántico.
 Los elementos denominados como 
\begin_inset Quotes fld
\end_inset

qbits
\begin_inset Quotes frd
\end_inset

 son totalmente equivalentes a un valor de probabilidad en el intervalo
 [0, 1], y las operaciones referidas como 
\begin_inset Quotes fld
\end_inset

puertas cuánticas
\begin_inset Quotes frd
\end_inset

 son simplemente desplazamientos dentro de ese intervalo.
 Si la idea original proviene o no de los conceptos cuánticos es irrelevante
 para explicar el algoritmo.
\end_layout

\begin_layout Standard
A pesar de todo, se trata de una nueva revisión del algoritmo evolutivo
 que parece dar buenos resultados a la hora de aplicarlo a problemas reales.
 Posibles investigaciones futuras pasarían por explorar otros subcampos
 de la Computación Evolutiva más minoritarios desde la perspectiva de QEA.
 Y a largo plazo, cuando se pueda explotar verdaderamente todo el potencial
 de la Computación Cuántica, el diseño e implementación de algoritmos genéticos
 cuánticos constituirá un área de investigación verdaderamente prometedora.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "qea"
options "bibtotoc,plain"

\end_inset


\end_layout

\end_body
\end_document
